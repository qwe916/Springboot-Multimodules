plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}


java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}



allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

}

subprojects { subproject ->
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library' // java-library 플러그인 추가
    apply plugin: 'idea'
    apply plugin: 'application'
    apply plugin: 'distribution'
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    plugins.withType(JavaPlugin).tap {
        configureEach {
            java {
                sourceCompatibility = JavaVersion.VERSION_17
                targetCompatibility = JavaVersion.VERSION_17
            }

            compileJava {
                options.encoding = 'UTF-8'
            }

            idea {
                module {
                    outputDir = file("$buildDir/classes/main/")
                    testOutputDir = file("$buildDir/classes/test/")
                }
            }
        }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
